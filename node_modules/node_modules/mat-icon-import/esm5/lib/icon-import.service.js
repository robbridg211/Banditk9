/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable, Inject } from '@angular/core';
import { MatIconRegistry } from '@angular/material';
import { DomSanitizer } from '@angular/platform-browser';
/**
 * @record
 */
export function IconsConfig() { }
if (false) {
    /** @type {?} */
    IconsConfig.prototype.keys;
    /** @type {?} */
    IconsConfig.prototype.path;
}
var IconImportService = /** @class */ (function () {
    function IconImportService(iconRegistry, domSanitizer, icons) {
        this.iconRegistry = iconRegistry;
        this.domSanitizer = domSanitizer;
        this.icons = icons;
    }
    /**
     * @return {?}
     */
    IconImportService.prototype.register = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        try {
            for (var _b = tslib_1.__values(this.icons.keys), _c = _b.next(); !_c.done; _c = _b.next()) {
                var icon = _c.value;
                this.iconRegistry.addSvgIcon(icon, this.domSanitizer.bypassSecurityTrustResourceUrl(this.icons.path + "/baseline-" + icon + "-24px.svg"));
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    IconImportService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    IconImportService.ctorParameters = function () { return [
        { type: MatIconRegistry },
        { type: DomSanitizer },
        { type: undefined, decorators: [{ type: Inject, args: ['icons',] }] }
    ]; };
    return IconImportService;
}());
export { IconImportService };
if (false) {
    /** @type {?} */
    IconImportService.prototype.icons;
    /** @type {?} */
    IconImportService.prototype.iconRegistry;
    /** @type {?} */
    IconImportService.prototype.domSanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1pbXBvcnQuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL21hdC1pY29uLWltcG9ydC8iLCJzb3VyY2VzIjpbImxpYi9pY29uLWltcG9ydC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7OztBQUV6RCxpQ0FHQzs7O0lBRkMsMkJBQWU7O0lBQ2YsMkJBQWE7O0FBR2Y7SUFJRSwyQkFDVSxZQUE2QixFQUM3QixZQUEwQixFQUNqQixLQUFrQjtRQUYzQixpQkFBWSxHQUFaLFlBQVksQ0FBaUI7UUFDN0IsaUJBQVksR0FBWixZQUFZLENBQWM7UUFHbEMsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDckIsQ0FBQzs7OztJQUVELG9DQUFROzs7SUFBUjs7O1lBQ0UsS0FBbUIsSUFBQSxLQUFBLGlCQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFBLGdCQUFBLDRCQUFFO2dCQUEvQixJQUFNLElBQUksV0FBQTtnQkFDYixJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsQ0FDMUIsSUFBSSxFQUNKLElBQUksQ0FBQyxZQUFZLENBQUMsOEJBQThCLENBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLGtCQUFhLElBQUksY0FBVyxDQUFDLENBQ2pHLENBQUM7YUFDSDs7Ozs7Ozs7O0lBQ0gsQ0FBQzs7Z0JBbkJGLFVBQVU7Ozs7Z0JBUkYsZUFBZTtnQkFDZixZQUFZO2dEQWNoQixNQUFNLFNBQUMsT0FBTzs7SUFhbkIsd0JBQUM7Q0FBQSxBQXBCRCxJQW9CQztTQW5CWSxpQkFBaUI7OztJQUM1QixrQ0FBbUI7O0lBR2pCLHlDQUFxQzs7SUFDckMseUNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hdEljb25SZWdpc3RyeSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcclxuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEljb25zQ29uZmlnIHtcclxuICBrZXlzOiBzdHJpbmdbXTtcclxuICBwYXRoOiBzdHJpbmc7XHJcbn1cclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEljb25JbXBvcnRTZXJ2aWNlIHtcclxuICBpY29uczogSWNvbnNDb25maWc7XHJcblxyXG4gIGNvbnN0cnVjdG9yIChcclxuICAgIHByaXZhdGUgaWNvblJlZ2lzdHJ5OiBNYXRJY29uUmVnaXN0cnksXHJcbiAgICBwcml2YXRlIGRvbVNhbml0aXplcjogRG9tU2FuaXRpemVyLFxyXG4gICAgQEluamVjdCgnaWNvbnMnKSBpY29uczogSWNvbnNDb25maWdcclxuICApIHtcclxuICAgIHRoaXMuaWNvbnMgPSBpY29ucztcclxuICB9XHJcblxyXG4gIHJlZ2lzdGVyKCkge1xyXG4gICAgZm9yIChjb25zdCBpY29uIG9mIHRoaXMuaWNvbnMua2V5cykge1xyXG4gICAgICB0aGlzLmljb25SZWdpc3RyeS5hZGRTdmdJY29uKFxyXG4gICAgICAgIGljb24sXHJcbiAgICAgICAgdGhpcy5kb21TYW5pdGl6ZXIuYnlwYXNzU2VjdXJpdHlUcnVzdFJlc291cmNlVXJsKGAke3RoaXMuaWNvbnMucGF0aH0vYmFzZWxpbmUtJHtpY29ufS0yNHB4LnN2Z2ApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==